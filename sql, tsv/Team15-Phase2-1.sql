--Transaction 시작
BEGIN;
DROP TABLE IF EXISTS ACTOR CASCADE;
DROP TABLE IF EXISTS MOVIE CASCADE;
DROP TABLE IF EXISTS GENRE CASCADE;
DROP TABLE IF EXISTS BELONG CASCADE;
DROP TABLE IF EXISTS ACCOUNT CASCADE;
DROP TABLE IF EXISTS RATING CASCADE;
DROP TABLE IF EXISTS VERSION CASCADE;
DROP TABLE IF EXISTS EPISODE CASCADE;
DROP TABLE IF EXISTS ACT CASCADE;

CREATE TABLE ACTOR(
ActorID SERIAL NOT NULL,
Name VARCHAR(30) NOT NULL,
BirthDate DATE,
DeathDate DATE,
Sex CHAR,
PRIMARY KEY (ActorID)
);

CREATE TABLE MOVIE(
MovieID SERIAL NOT NULL,
Title VARCHAR(200) NOT NULL,
Type VARCHAR(30),
IsAdult boolean,
StartDate DATE,
AverageScore NUMERIC(5,2),
runTimes INTEGER,
PRIMARY KEY (MovieID)
);

CREATE TABLE GENRE(
GenreID SERIAL NOT NULL,
Genre VARCHAR(30) NOT NULL,
PRIMARY KEY (GenreID)
);

CREATE TABLE BELONG(
BelongID SERIAL NOT NULL,
MovieID INTEGER NOT NULL,
GenreID INTEGER NOT NULL,
PRIMARY KEY (BelongID),
FOREIGN KEY (MovieID) REFERENCES MOVIE(MovieID) ON DELETE CASCADE,
FOREIGN KEY (GenreID) REFERENCES GENRE(GenreID) ON DELETE CASCADE,
UNIQUE (MovieID, GenreID)
);

CREATE TABLE ACCOUNT(
AccountID SERIAL NOT NULL,
ID VARCHAR(50) NOT NULL,
Password VARCHAR(50) NOT NULL,
Membership VARCHAR(10),
Name VARCHAR(30) NOT NULL,
Address VARCHAR(100),
Sex CHAR,
BirthDate DATE NOT NULL,
Job VARCHAR(30),
Phone CHAR(13),
JoinDate TIMESTAMP,
PRIMARY KEY (AccountID),
UNIQUE (ID)
);

ALTER TABLE ACCOUNT ALTER COLUMN Membership SET DEFAULT 'Basic';


CREATE TABLE RATING(
RatingID SERIAL NOT NULL,
MovieID INTEGER NOT NULL,
AccountID INTEGER NOT NULL,
Score NUMERIC(5,2) NOT NULL,
PRIMARY KEY (RatingID),
FOREIGN KEY (MovieID) REFERENCES MOVIE(MovieID) ON DELETE CASCADE,
FOREIGN KEY (AccountID) REFERENCES ACCOUNT(AccountID) ON DELETE CASCADE,
UNIQUE (MovieID, AccountID)
);

CREATE TABLE VERSION(
VersionID SERIAL NOT NULL,
MovieID INTEGER NOT NULL,
Ordering INTEGER NOT NULL,
Title VARCHAR(200) NOT NULL,
Region CHAR(2) NOT NULL,
PRIMARY KEY (VersionID),
FOREIGN KEY (MovieID) REFERENCES MOVIE(MovieID) ON DELETE CASCADE,
UNIQUE (MovieID, Ordering)
);

CREATE TABLE EPISODE(
EpisodeID SERIAL NOT NULL,
MovieID INTEGER NOT NULL,
EpisodeNum INT NOT NULL,
PRIMARY KEY (EpisodeID),
FOREIGN KEY (MovieID) REFERENCES MOVIE(MovieID) ON DELETE CASCADE,
UNIQUE (MovieID, EpisodeNum)
);

CREATE TABLE ACT(
ActID SERIAL NOT NULL,
MovieID INTEGER NOT NULL,
ActorID INTEGER NOT NULL,
PRIMARY KEY (ActID),
FOREIGN KEY (MovieID) REFERENCES MOVIE(MovieID) ON DELETE CASCADE,
FOREIGN KEY (ActorID) REFERENCES ACTOR(ActorID) ON DELETE CASCADE,
UNIQUE (MovieID, ActorID)
);

--COMMIT
COMMIT;
